#Тестовое задание

Работа с внешними источниками и импорт данных

1.	Допустим, что существует сервис, предоставляющий выгрузку данных о некотором рейтинге организаций в виде файла формата CSV
	a.	Работа с сервисом осуществляется по протоколу HTTP. По условию файл доступен через: GET https://some.service.com/rating
	b.	CSV файл имеет формат
		%ИНН_ОРГАНИЗАЦИИ%;%РЕЙТИНГ_ОРГАНИЗАЦИИ%

2.	Полученную информацию импортировать в условную (реляционную) базу данных (например PostgreSQL)

	a.	В базе имеются две таблицы связанные между собой
	-----------------------------------------
	|		OrgRatings		|
	-----------------------------------------
	| Id	|	 Org_Id	| Rating	|
	-----------------------------------------

	_________________________________
	|	Organazations		|
	---------------------------------
	|	Id	|	Inn	|
	---------------------------------

	b.	Условия импорта:
		Если организация из выгрузки не существует в базе - добавить
		Если рейтинг есть в выгрузке, но нет в базе - добавить
		Если рейтинг в выгрузке отличается от того, что в базе - обновить

3.	Полный процесс обработки разместить в web приложении .NET Core,  
	a.	Реализовать запуск импорта автоматически каждые N часов. 
	b.	Добавить логирование ошибок (ошибка получения файла, ошибка обработки файла, ошибка импорта в базу)
	c.	Добавить логирование на ключевых точках (получение файла, завершение импорта)
	d.	Реализовать валидацию данных из выгрузки (например проверять ИНН организации на корректность)
	e.	Дополнительно можно реализовать редактирование/добавление рейтинга организации вручную через web интерфейс. (можно использовать ASP.NET Core MVC)

4.	P.S.
	a.	Так как задание тестовое - описанные выше сервис и база данных реально не существуют. 
	b.	Допускается использование сторонних библиотек.

------------------------------------------------------------------------------------------------------------------------
Решиние

	1. веб-служба Web-API "Rating"
		a.	ожидает GET запрос по адресу ratings
	2. веб приложение ASP.Net MVC "WebTest""
		a.	организует запуск фоновой задачи и 
		b.	отправка запросов на Web-API и получение данных
		c.	обработка ошибок и логирование (logger,console)
		d.	если организации нет в бд - добавляется; вносятся изменения согласно данным о полученным рейтинге
		e.	проверка на не верный номер инн, рейтинг
		f.	локальная база данных SQL
		g.	Entity Framwork
